//////////////////////////////////////////////////////////////////////////XLAR8-CIPHER-GENERATOR///////////////////////////////////////////////

string  encryption(int key , string source)
{
	  int i;
      string cypher;
      key = key % 256;
      char ch;

for(i=0;i<source.size();i++)
{    
	if(source[i]==' ')
     {  
     	
		cypher.push_back(' ');
		continue;
	 }

    ch = (source[i] + key)%256;
    cypher.push_back(ch);
  
}

return cypher;
}


string  decryption(int key , string source)
{ 
 int i;
 string cypher;
 char ch;
 key = key % 256;

for(i=0;i<source.size();i++)
{
	    if(source[i]==' ')
       {
         cypher=cypher+" ";continue;
		}

        if(source[i] - key < 0 )
		{
	     ch = source[i] + 256 - key;
        }
         else
        {
	     ch = source[i] - key;
        }
   
        cypher.push_back(ch);
     
}

return cypher;

}


/*  MODULE CHECKER   :P
int main()
{
int i,j,key;
cout<<"enter key";
cin>>key;
string source;
cout<<"enter source";
cin.ignore();
getline(cin,source);
string encrypted =encryption(key,source);
cout<<"\nencrypted data is > "<<encrypted;
string decrypted =decryption(key,encrypted);
cout<<"\ndecrypted data is > "<<decrypted;
return 0;


}*/






