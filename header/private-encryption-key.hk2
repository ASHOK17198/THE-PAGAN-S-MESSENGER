//////////////////////////////////////////////////////////////////////////XLAR8-CIPHER-GENERATOR///////////////////////////////////////////////
string  encryption(int key , string source)
{  int i;
string cypher;
key = key % 256;
char ch;

for(i=0;i<source.size();i++)
{    if(source[i]==' ')
     {  
     	//cout<<"yes boi"<<i;
		cypher.push_back(' ');
		continue;
	}
/*
else  if(source[i] >= 'a'){
     //cypher=cypher+(char(((int(source[i])+key-65))%26) +65);
	ch = ((source[i]-'a') + key) + 'a';
	cypher.push_back(ch);
}
else  if('Z' >= source[i]){
	ch = ((source[i]-'A') + key) + 'A';
	cypher.push_back(ch);
}
*/
ch = (source[i] + key)%256;
cypher.push_back(ch);
     //cypher=cypher+(char(((int(source[i])+key-97))%26) +97);
//cout<<(char(int(source[i]+key-65) +65));
}

return cypher;

}


string  decryption(int key , string source)
{  int i;
string cypher;
char ch;
key = key % 256;
//cout<<"hello boi";
for(i=0;i<source.size();i++)
{    if(source[i]==' ')
     {//cout<<"yes"<<i;
cypher=cypher+" ";continue;}
/*   2ND METHOD
else  if(source[i] > ('Z'+key)){
	ch = ((source[i]-'a') - key) + 'a';
	cypher.push_back(ch);
}
    // cypher=cypher+(char(((int(source[i])+key-65))%26) +65);
else  if(source[i] <= ('Z'+key)){
	ch = ((source[i]-'A') - key) + 'A';
	cypher.push_back(ch);
}
*/
if(source[i] - key < 0 ){
	ch = source[i] + 256 - key;
}
else{
	ch = source[i] - key;
}
cypher.push_back(ch);
     //cypher=cypher+(char(((int(source[i])+key-97))%26) +97);
//cout<<(char(int(source[i]+key-65) +65));
}

return cypher;

}


/*int main()
{
int i,j,key;
cout<<"enter key";
cin>>key;
string source;
cout<<"enter source";
cin.ignore();
getline(cin,source);
string encrypted =encryption(key,source);
cout<<"\nencrypted data is > "<<encrypted;
string decrypted =decryption(key,encrypted);
cout<<"\ndecrypted data is > "<<decrypted;
return 0;


}*/






